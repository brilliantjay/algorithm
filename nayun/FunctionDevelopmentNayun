import java.util.ArrayList;
class FunctionDevelopmentNayun {
    public int[] solution(int[] progresses, int[] speeds) {
         ArrayList<Integer> remain = new ArrayList<Integer>();
		    
		    for(int i=0;i<progresses.length;i++) {
		    	int p = 100 - progresses[i];
		    	int s = speeds[i];
		    	int d = p / s;
		    	if(p % s !=0) {
		    		d +=1;
		    	}
		    	
		    	remain.add(d);	    	
		    }
		    
		    int first = remain.get(0);
		    int cnt = 1;
		    
		    ArrayList<Integer> result = new ArrayList<Integer>();
		    
		    int remainSize = remain.size();
		    
		    for(int i=1;i<remainSize;i++) {    	
		    	if(first>=remain.get(i)) {
		    		cnt++;
		    	}else {
		    		result.add(cnt);
		    		first = remain.get(i);
		    		cnt = 1;
		    	}
		    	
		    	if(i==remainSize-1) {
		    		result.add(cnt);
		    	}
		    }
		    
		    return result.stream().mapToInt(i->i).toArray();	
    }
}
